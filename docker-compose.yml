version: '3'

services:
  hi-client:
    container_name: hi-client
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_URL: ${NEXT_PUBLIC_URL}
        NEXT_PUBLIC_STRAPI_API_URL: ${NEXT_PUBLIC_STRAPI_API_URL}
        NEXT_PUBLIC_STRAPI_DOMAIN: ${NEXT_PUBLIC_STRAPI_DOMAIN}
        REVALIDATE_TOKEN: ${REVALIDATE_TOKEN}
        NEXT_PUBLIC_SENTRY_DSN: ${NEXT_PUBLIC_SENTRY_DSN}
        SENTRY_AUTH_TOKEN: ${SENTRY_AUTH_TOKEN}
        SENTRY_PROJECT: ${SENTRY_PROJECT}
        SENTRY_ORG: ${SENTRY_ORG}
        SMTP_HOST: ${SMTP_HOST}
        SMTP_PORT: ${SMTP_PORT}
        SMTP_USER: ${SMTP_USER}
        SMTP_PASSWORD: ${SMTP_PASSWORD}
        SMTP_FROM_EMAIL: ${SMTP_FROM_EMAIL}
    restart: always
    volumes:
      - client_next_standalone:/app/.next/standalone
      - client_next_static:/app/.next/static
      - client_next_cache:/app/.next/cache
    ports:
      - 3000:3000
    networks:
      - hi-net

  # Add more containers below (nginx, postgres, etc.)

# Define a network, which allows containers to communicate
# with each other, by using their container name as a hostname
networks:
  hi-net:
    name: hi-net
    external: true

volumes:
  client_next_standalone:
    external: true
  client_next_static:
    external: true
  client_next_cache:
    external: true